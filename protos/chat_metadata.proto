syntax = "proto3";


package connect;
import "user_metadata.proto";


service ChatService {
  // Bidirectional streaming for real-time chat
  rpc MessageStream(stream Message) returns (stream Message);
  rpc ChatRoom(GetOrCreateChatRoomRequest) returns (ChatResponse);
}

message GetOrCreateChatRoomRequest {
  string current_user_uid = 1;
  string other_user_uid = 2;
  string current_user_phone_number = 3;
  string chat_source = 4; // "phone_number" or "uuid"
}

message Message {
  string id = 1;
  string sender_ref = 2;
  string content = 3;
  string recipient_ref = 4;
  MessageStatus status = 5;
  string chat_room_ref = 6;

}

message ChatResponse {
  Chat chat = 1;
}

message Chat {
  string id = 1;
  map<string, string> participants_uid = 2;
  Message last_message = 3;
  string chat_source = 4; 
  bool initiated_by_phone_number = 5;



  // repeated connect.User participants = 3;
  // string created_at = 4;
  // string updated_at = 5;
  // Message last_message = 6;
  // GroupMetaData group_metadata = 7; // Only for group chats
}

message GroupMetaData {
  string name = 1;
  string description = 2;
  string creation_date = 3;
  connect.User created_by = 4;
  repeated connect.User admins = 5;
  string profile_picture = 6;
}

enum MessageStatus {
  SENT = 0; // Message sent but not yet delivered
  DELIVERED = 1; // Message delivered to recipient
  READ = 2; // Message read by recipient
  ERROR = 3; // Error in sending message
}